#include "sio_mime_types.hpp"

MimeType::MimeType(void) {
	insert({"html", "text/html"});
	insert({"htm", "text/html"});
	insert({"shtml", "text/html"});
	insert({"css", "text/css"});
	insert({"xml", "text/xml"});
	insert({"gif", "image/gif"});
	insert({"jpeg", "image/jpeg"});
	insert({"jpg", "image/jpeg"});
	insert({"js", "application/javascript"});
	insert({"atom", "application/atom+xml"});
	insert({"rss", "application/rss+xml"});
	insert({"mml", "text/mathml"});
	insert({"txt", "text/plain"});
	insert({"jad", "text/vnd.sun.j2me.app-descriptor"});
	insert({"wml", "text/vnd.wap.wml"});
	insert({"htc", "text/x-component"});
	insert({"avif", "image/avif"});
	insert({"png", "image/png"});
	insert({"svg", "image/svg+xml"});
	insert({"svgz", "image/svg+xml"});
	insert({"tif", "image/tiff"});
	insert({"tiff", "image/tiff"});
	insert({"wbmp", "image/vnd.wap.wbmp"});
	insert({"webp", "image/webp"});
	insert({"ico", "image/x-icon"});
	insert({"jng", "image/x-jng"});
	insert({"bmp", "image/x-ms-bmp"});
	insert({"woff", "font/woff"});
	insert({"woff2", "font/woff2"});
	insert({"jar", "application/java-archive"});
	insert({"war", "application/java-archive"});
	insert({"ear", "application/java-archive"});
	insert({"json", "application/json"});
	insert({"hqx", "application/mac-binhex40"});
	insert({"doc", "application/msword"});
	insert({"pdf", "application/pdf"});
	insert({"ps", "application/postscript"});
	insert({"eps", "application/postscript"});
	insert({"ai", "application/postscript"});
	insert({"rtf", "application/rtf"});
	insert({"m3u8", "application/vnd.apple.mpegurl"});
	insert({"kml", "application/vnd.google-earth.kml+xml"});
	insert({"kmz", "application/vnd.google-earth.kmz"});
	insert({"xls", "application/vnd.ms-excel"});
	insert({"eot", "application/vnd.ms-fontobject"});
	insert({"ppt", "application/vnd.ms-powerpoint"});
	insert({"odg", "application/vnd.oasis.opendocument.graphics"});
	insert({"odp", "application/vnd.oasis.opendocument.presentation"});
	insert({"ods", "application/vnd.oasis.opendocument.spreadsheet"});
	insert({"odt", "application/vnd.oasis.opendocument.text"});
	insert({"pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"});
	insert({"xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"});
	insert({"docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"});
	insert({"wmlc", "application/vnd.wap.wmlc"});
	insert({"wasm", "application/wasm"});
	insert({"7z", "application/x-7z-compressed"});
	insert({"cco", "application/x-cocoa"});
	insert({"jardiff", "application/x-java-archive-diff"});
	insert({"jnlp", "application/x-java-jnlp-file"});
	insert({"run", "application/x-makeself"});
	insert({"pl", "application/x-perl"});
	insert({"pm", "application/x-perl"});
	insert({"prc", "application/x-pilot"});
	insert({"pdb", "application/x-pilot"});
	insert({"rar", "application/x-rar-compressed"});
	insert({"rpm", "application/x-redhat-package-manager"});
	insert({"sea", "application/x-sea"});
	insert({"swf", "application/x-shockwave-flash"});
	insert({"sit", "application/x-stuffit"});
	insert({"tk", "application/x-tcl"});
	insert({"tcl", "application/x-tcl"});
	insert({"der", "application/x-x509-ca-cert"});
	insert({"crt", "application/x-x509-ca-cert"});
	insert({"pem", "application/x-x509-ca-cert"});
	insert({"xpi", "application/x-xpinstall"});
	insert({"xhtml", "application/xhtml+xml"});
	insert({"xspf", "application/xspf+xml"});
	insert({"zip", "application/zip"});
	insert({"bin", "application/octet-stream"});
	insert({"dll", "application/octet-stream"});
	insert({"exe", "application/octet-stream"});
	insert({"deb", "application/octet-stream"});
	insert({"dmg", "application/octet-stream"});
	insert({"iso", "application/octet-stream"});
	insert({"img", "application/octet-stream"});
	insert({"msm", "application/octet-stream"});
	insert({"msi", "application/octet-stream"});
	insert({"msp", "application/octet-stream"});
	insert({"mid", "audio/midi"});
	insert({"midi", "audio/midi"});
	insert({"kar", "audio/midi"});
	insert({"mp3", "audio/mpeg"});
	insert({"ogg", "audio/ogg"});
	insert({"m4a", "audio/x-m4a"});
	insert({"ra", "audio/x-realaudio"});
	insert({"3gpp", "video/3gpp"});
	insert({"3gp", "video/3gpp"});
	insert({"ts", "video/mp2t"});
	insert({"mp4", "video/mp4"});
	insert({"mpeg", "video/mpeg"});
	insert({"mpg", "video/mpeg"});
	insert({"mov", "video/quicktime"});
	insert({"webm", "video/webm"});
	insert({"flv", "video/x-flv"});
	insert({"m4v", "video/x-m4v"});
	insert({"mng", "video/x-mng"});
	insert({"asx", "video/x-ms-asf"});
	insert({"asf", "video/x-ms-asf"});
	insert({"wmv", "video/x-ms-wmv"});
	insert({"avi", "video/x-msvideo"});

	insert({"", DEFAULT_MIME_TYPE});
}

MimeType::mapped_type &MimeType::operator[](const key_type &key) {
	return find(key) != end() ? Base::operator[](key) : Base::operator[]("");
}

MimeType mimeTypes;
